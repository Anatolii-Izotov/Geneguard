plugins {
    id("java")
    id("org.springframework.boot") version "3.3.4"
    id("io.spring.dependency-management") version "1.1.6"
}

group = "com.geneguard.app"
version = "0.0.1-SNAPSHOT"

repositories {
    mavenCentral()
    maven { url = uri("https://jitpack.io") }
    maven { url = uri("https://oss.sonatype.org/content/repositories/snapshots/") }
}

dependencies {
    implementation 'com.googlecode.charts4j:charts4j:1.3'

    implementation 'net.sf.trove4j:trove4j:3.0.3'

    implementation 'ch.qos.logback:logback-classic:1.4.12' // Ensure only this binding is present
    implementation 'org.slf4j:slf4j-api:2.0.7' // Core SLF4J API

    // Local JAR file for SnpEff
    implementation files("/Users/anatolyizotov/Java_plugins/SnpEff-master/target/SnpEff-5.2.jar")

    // Spring Boot Web dependencies
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.flywaydb:flyway-core:9.5.1'

    // Lombok for annotations
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")

    // HTSJDK for genomic data handling
    implementation("com.github.samtools:htsjdk:4.1.3")

    // Testing dependencies
    testImplementation(platform("org.junit:junit-bom:5.9.1"))
    testImplementation("org.junit.jupiter:junit-jupiter")
    testImplementation("org.mockito:mockito-junit-jupiter:5.11.0")
    testImplementation("org.springframework.boot:spring-boot-starter-test")

    // Development tools
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'

    // Local JAR files (ensure these paths are correct)
//    implementation files("/Users/anatolyizotov/Java_plugins/picard/build/libs/picard-3.3.0-SNAPSHOT-all.jar")
}

tasks.test {
    useJUnitPlatform()
}